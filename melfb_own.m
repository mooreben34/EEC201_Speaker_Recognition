%% EEC 201 Final Project | B. Speech Processing | 2B or not 2B

%-------------------------------------------------------------------------%
% Function Definition: melb_own.m
% Extract the MFCC coefficients needed for speaker classification

% Inputs:
% audio_file   - speaker for which MFCC coefficients will be generated
% N            - Frame Size for STFT (Typical are N=128, 256, 512)
% p            - Number of Mel Filter Banks
% coefficeints - Number of MFCC coefficients

% Outputs:
% MFCC_own     - MFCCs generated by group implementation
% MFCC_MATLAB  - MFCCs generated by MATLAB built in function mfcc.m

% Dependencies:
% melfb.m      - Generates Mel Filter Banks 
%-------------------------------------------------------------------------%

function [MFCC_own, MFCC_MATLAB] = melfb_own(audio_file, N, p, coefficients)
    [s, fs] = audioread(audio_file);

    % Plot the time-domain signal
    subplot(3,2,1)
    plot(s)
    title("Time Domain")
    xlabel('Time')
    xlabel('Amplitude')

    % Use STFT to generate periodogram
    subplot(3,2,2)
    stft(s,fs,'Window',hamming(N, 'periodic'),'OverlapLength',round(N/3), ...
        'FFTLength',N, 'FrequencyRange', 'onesided');
    colormap(jet);

    % Extract STFT matrix
    [S,F,T] = stft(s,fs,'Window',hamming(N, 'periodic'),'OverlapLength', ...
        ceil(N/3),'FFTLength',N, 'FrequencyRange', 'onesided');

    % Convert STFT to Periodogram (PSD)
    s_power = (abs(S).^2)/N;

    % Convolve signal with Mel Filter Banks
    m = melfb(p, N, fs);
    Mel_Spectrogram = m * s_power;
    Mel_Spectrogram_log = log10(abs(Mel_Spectrogram));

    % Convert Frequency to Mel Scale (Mel Frequency Wrapping)
    b = hz2mel([0,max(F)]);
    melVect = linspace(b(1),b(2),p);
    F_mel = mel2hz(melVect)./1000; % Display in KHz

    % Plot the Mel Spectrogram
    subplot(3,2,3)
    surf(T,F_mel, 10 * Mel_Spectrogram_log,'EdgeColor','none');
    colorbar
    colormap jet;
    axis tight;
    title("Mel Spectrogram: Own")
    ylabel('Frequency (KHz)')
    view(0,90);

    % Compare with MATLAB melSpectrogram Function
    subplot(3,2,4)
    melSpectrogram(s,fs,'NumBands',p,'Window',hamming(N, 'periodic'), ...
        'OverlapLength',ceil(N/3),'FFTLength',N, 'WindowNormalization', 0, ...
        'SpectrumType', 'power');
    colormap(jet);
    title("Mel Spectrogram: MATLAB")

    % Generate MFCCs
    cepstrum = dct(Mel_Spectrogram_log);
    cepstrum_normalized = (cepstrum - mean(cepstrum)) ./ max(max((cepstrum)));

    % Dimension matching for Plotting MFCCs
    MFCC_own = cepstrum_normalized(1:coefficients,:);
    t = linspace(0,length(s),size(Mel_Spectrogram_log, 2))';
    f = (1:coefficients)';

    % Plot MFCC Coefficients using own implementation
    subplot(3,2,5);
    surf(t,f,MFCC_own,'EdgeColor', 'none');
    title("MFCC - Own")
    colorbar
    colormap jet;
    axis tight;
    ylabel('MFCC')
    xlabel('Time')
    view(0,90);

    % Plot MFCC Coefficients using MATLAB implementation
    subplot(3,2,6);
    MFCC_MATLAB = mfcc(S,fs,"LogEnergy","Ignore",'Window',hamming(N, 'periodic'));
    surf(t,f,MFCC_MATLAB','EdgeColor', 'none');
    title("MFCC - MATLAB")
    colorbar
    colormap jet;
    axis tight;
    ylabel('MFCC')
    xlabel('Time')
    view(0,90);
    
    sgtitle(["Feature Extraction: ",(audio_file)]) 
end